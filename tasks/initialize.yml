---

- name: ({{ ansible_distribution }}) - INIT - Define commons facts
  set_fact:
   install_arch: "{{ heketi_install_arch | default('amd64') }}"
   install_version: "{{ heketi_install_version | default('9.0.0') }}"
   heketi_dl_base_url: "https://github.com/heketi/heketi/releases/download"

- name: ({{ ansible_distribution }}) - INIT - Check Heketi required 'heketi_install_arch' parameter value
  fail:
   msg: "Valeurs permises [heketi_install_arch] : [amd, amd64, arm, arm64]"
  when:
   - install_arch not in ["amd", "amd64", "arm", "arm64"]
   - heketi_install|bool

- name: ({{ ansible_distribution }}) - INIT - Define commons facts for archive installation
  set_fact:
   dl_url: "{{ heketi_dl_base_url }}/v{{ install_version }}/heketi-v{{ install_version }}.linux\
   .{{ install_arch }}.tar.gz"
   dl_c_url: "{{ heketi_dl_base_url }}/v{{ install_version }}/heketi-client-v{{ install_version }}\
   .linux.{{ install_arch }}.tar.gz"
   dl_file: "/tmp/heketi-v{{ install_version }}.linux.{{ install_arch }}.tar.gz"
   dl_c_file: "/tmp/heketi-client-v{{ install_version }}.linux.{{ install_arch }}.tar.gz"
   heketi_install_dir: "{{ heketi_install_dir | default('/etc/keheti') }}"
   heketi_install_client_dir: "{{ heketi_install_client_dir | default('/etc/keheti-client') }}"
  when:
   - heketi_install|bool

- name: ({{ ansible_distribution }}) - INIT - Define service facts for CentOS 6
  set_fact:
   heketi_service_template: "templates/heketi-bootstrap.j2"
   heketi_service_unit_dir: "/etc/rc.d/init.d"
   heketi_service_filename: "heketi"
  when:
   - ansible_distribution == "CentOS"
   - ansible_distribution_major_version|int == 6
   - heketi_configure|bool

- name: ({{ ansible_distribution }}) - INIT - Define service facts for CentOS > 6
  set_fact:
   heketi_service_unit_dir: "/usr/lib/systemd/system"
  when:
   - ansible_distribution == "CentOS"
   - ansible_distribution_major_version|int > 6
   - heketi_configure|bool

- name: ({{ ansible_distribution }}) - INIT - Define service facts for Ubuntu or Debian
  set_fact:
   heketi_service_unit_dir: "/lib/systemd/system"
  when:
   - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"
   - heketi_configure|bool

- name: ({{ ansible_distribution }}) - INIT - Define service facts for OS other than CentOS 6
  set_fact:
   heketi_service_template: "templates/heketi.service.j2"
   heketi_service_filename: "heketi.service"
   heketi_service_working_dir: "{{ heketi_service_working_dir | default('/var/lib/heketi') }}"
   heketi_service_user: "{{ heketi_service_user | default('heketi') }}"
  when:
   - ansible_distribution != "CentOS" or ansible_distribution_major_version|int > 6
   - heketi_configure|bool

- name: ({{ ansible_distribution }}) - INIT - Define commons facts for all type installation
  set_fact:
   heketi_install: "{{ heketi_install | default(true) }}"
   heketi_install_command_link: "{{ heketi_install_command_link | default('/usr/bin/heketi') }}"
   heketi_cli_install_command_link: "{{ heketi_cli_install_command_link | default('/usr/bin/heketi-cli') }}"
   heketi_configure: "{{ heketi_configure | default(true) }}"
   heketi_config_dir: "{{ heketi_config_dir | default('/etc/keheti') }}"
   heketi_config_client_dir: "{{ heketi_config_client_dir | default('/etc/keheti-client') }}"
   heketi_config_filename: "{{ heketi_config_filename | default('heketi.conf') }}"
   heketi_config_client_filename: "{{ heketi_config_client_filename | default('heketi-topology.json') }}"
   heketi_config_topology_nodes: "{{ heketi_config_topology_nodes | default([]) }}"
   heketi_data_dir: "{{ heketi_data_dir | default('/var/lib/heketi') }}"
   heketi_node_executor: "{{ heketi_node_executor | default('ssh') }}"
   heketi_service_unit_description: "{{ heketi_service_unit_description | default('Heketi Storage Provisioning Server') }}"
   heketi_service_pid_file: "{{ heketi_service_pid_file | default('/var/run/heketi.pid') }}"
   heketi_http_port: "{{ heketi_http_port | default('8080') }}"
   heketi_tls_enabled: "{{ heketi_tls_enabled | default(false) }}"
   heketi_cert_file: "{{ heketi_cert_file | default('') }}"
   heketi_key_file: "{{ heketi_key_file | default('') }}"
   heketi_use_auth: "{{ heketi_use_auth | default(false) }}"
   heketi_admin_token: "{{ heketi_admin_token | default('eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJLdWJ\
   lQ2xvdWQgU0RTIFRva2VuIiwiaWF0IjoxNTc3MDE2Mzg5LCJleHAiOjE5MjQwODUxODksImF1ZCI6InNkcy5sYWIua3ViZS1jbG91ZC5pbn\
   QiLCJzdWIiOiJzZHMtYWRtaW5AbGFiLmt1YmUtY2xvdWQuaW50IiwiR2l2ZW5OYW1lIjoiQWRtaW5pc3RyYXRvciIsIlN1cm5hbWUiOiJIRU\
   tFVEkiLCJFbWFpbCI6InNkcy1hZG1pbkBsYWIua3ViZS1jbG91ZC5pbnQiLCJSb2xlIjoiQWRtaW5pc3RyYXRvciJ9.jPmSkMNoYXrkRLTc_3\
   tpKGvNDcG-V5fqdFLq7eoPABQ') }}"
   heketi_user_token: "{{ heketi_user_token | default('eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJLdWJlQ2xvd\
   WQgU0RTIFRva2VuIiwiaWF0IjoxNTc3MDE2Mzg5LCJleHAiOjE5MjQwODUxODksImF1ZCI6InNkcy5sYWIua3ViZS1jbG91ZC5pbnQiLCJzdWIi\
   OiJzZHMtdXNlckBsYWIua3ViZS1jbG91ZC5pbnQiLCJHaXZlbk5hbWUiOiJVc2VyIiwiU3VybmFtZSI6IkhFS0VUSSIsIkVtYWlsIjoic2RzLXVz\
   ZXJAbGFiLmt1YmUtY2xvdWQuaW50IiwiUm9sZSI6IlVzZXIifQ.THWpcbG3NNhiPuCKmJyJ6UT1AQVeAfvuz4CP85NTr8A') }}"
   heketi_backup_db_to_kube_secret: "{{ heketi_backup_db_to_kube_secret | default(false) }}"
   heketi_profiling: "{{ heketi_profiling | default(false) }}"
   heketi_node_ssh_port: "{{ heketi_node_ssh_port | default('22') }}"
   heketi_node_fstab: "{{ heketi_node_fstab | default('/etc/fstab') }}"
   heketi_node_pv_data_alignment: "{{ heketi_node_pv_data_alignment | default('256K') }}"
   heketi_node_vg_physicalextentsize: "{{ heketi_node_vg_physicalextentsize | default('4MB') }}"
   heketi_node_lv_chunksize: "{{ heketi_node_lv_chunksize | default('256K') }}"
   heketi_node_xfs_sw: "{{ heketi_node_xfs_sw | default('') }}"
   heketi_node_xfs_su: "{{ heketi_node_xfs_su | default('') }}"
   heketi_node_backup_lvm_metadata: "{{ heketi_node_backup_lvm_metadata | default(false) }}"
   heketi_node_cli_timeout: "{{ heketi_node_cli_timeout | default('10') }}"
   heketi_node_debug_umount_failures: "{{ heketi_node_debug_umount_failures | default(true) }}"
   heketi_db_name: "{{ heketi_db_name | default('heketi.db') }}"
   heketi_node_refresh_time_monitor_gluster: "{{ heketi_node_refresh_time_monitor_gluster | default(120) }}"
   heketi_node_start_time_monitor_gluster: "{{ heketi_node_start_time_monitor_gluster | default(10) }}"
   heketi_loglevel: "{{ heketi_loglevel | default('debug') }}"
   heketi_node_auto_create_block_hosting_volume: "{{ heketi_node_auto_create_block_hosting_volume | default(true) }}"
   heketi_node_block_hosting_volume_size: "{{ heketi_node_block_hosting_volume_size | default(500) }}"
   heketi_node_block_hosting_volume_options: "{{ heketi_node_block_hosting_volume_options | \
   default('group gluster-block') }}"
   heketi_node_pre_request_volume_options: "{{ heketi_node_pre_request_volume_options | default('') }}"
   heketi_node_post_request_volume_options: "{{ heketi_node_post_request_volume_options | default('') }}"
   heketi_node_ssh_command_sudo: "{{ heketi_node_ssh_command_sudo | default(true) }}"
   heketi_node_brick_max_size_gb: "{{ heketi_node_brick_max_size_gb | default(1024) }}"
   heketi_node_brick_min_size_gb: "{{ heketi_node_brick_min_size_gb | default(1) }}"
   heketi_node_max_bricks_per_volume: "{{ heketi_node_max_bricks_per_volume | default(33) }}"

- name: ({{ ansible_distribution }}) - INIT - Check Heketi Source SSH Key File
  fail:
   msg: "Vérifier le chemin vers la clé SSH du serveur HEKETI à copier [Le chemin de fichier doit être renseigné]"
  when:
   - heketi_node_source_ssh_keyfile is not defined
   - heketi_node_executor == 'ssh'
   - heketi_install|bool

- name: ({{ ansible_distribution }}) - INIT - Check Heketi SSH Key File
  fail:
   msg: "Vérifier le chemin vers la clé SSH du serveur HEKETI [Le chemin de fichier doit être renseigné]"
  when:
   - heketi_node_ssh_keyfile is not defined
   - heketi_node_executor == 'ssh'
   - heketi_install|bool

- name: ({{ ansible_distribution }}) - INIT - Check Heketi SSH User name
  fail:
   msg: "Vérifier le nom de l'utilisateur SSH d'accès au noeud [Le nom doit être renseigné]"
  when:
   - heketi_node_ssh_user is not defined
   - heketi_node_executor == 'ssh'
   - heketi_install|bool
